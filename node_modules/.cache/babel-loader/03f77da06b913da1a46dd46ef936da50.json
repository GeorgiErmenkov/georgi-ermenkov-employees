{"ast":null,"code":"import _slicedToArray from \"/home/georgi/projects/georgi-ermenkov-employees/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/georgi/projects/georgi-ermenkov-employees/src/components/Uploader.js\";\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from '@material-ui/lab/Alert';\nimport * as Papa from 'papaparse';\nimport { getOverlappingDaysInIntervals } from 'date-fns';\nimport { setTeamworks } from \"../containers/Home/teamworkReducer\";\nimport { useDispatch } from \"react-redux\";\nexport function Uploader(_ref) {\n  var children = _ref.children;\n  var dispatch = useDispatch();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var teamDays = function teamDays(data) {\n    var results = {};\n\n    var daysTogether = function daysTogether(startEmp1, endEmp1, startEmp2, endEmp2) {\n      var se1 = new Date(startEmp1);\n      var se2 = new Date(startEmp2);\n      var ee1 = endEmp1 ? new Date(endEmp1) : Date.now();\n      var ee2 = endEmp2 ? new Date(endEmp2) : Date.now();\n      return getOverlappingDaysInIntervals({\n        start: se1,\n        end: ee1\n      }, {\n        start: se2,\n        end: ee2\n      });\n    };\n\n    data.map(function (tw) {\n      data.map(function (twNext) {\n        if (tw[1] === twNext[1] && tw[0] !== twNext[0]) {\n          if (!results[tw[1]]) results[tw[1]] = {};\n          var days = daysTogether(tw[2], tw[3], twNext[2], twNext[3]);\n          if (!results[tw[1]][\"\".concat(tw[0], \"-\").concat(twNext[0])]) results[tw[1]][\"\".concat(tw[0], \"-\").concat(twNext[0])] = 0;\n          if (!results[tw[1]][\"\".concat(twNext[0], \"-\").concat(tw[0])]) results[tw[1]][\"\".concat(twNext[0], \"-\").concat(tw[0])] = 0;\n          results[tw[1]][\"\".concat(tw[0], \"-\").concat(twNext[0])] += days + 1;\n          results[tw[1]][\"\".concat(twNext[0], \"-\").concat(tw[0])] += days + 1;\n        }\n      });\n    });\n    var final = Object.entries(results).map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          projectId = _ref3[0],\n          daysHash = _ref3[1];\n\n      var sorted = Object.entries(daysHash).sort(function (_ref4, _ref5) {\n        var _ref6 = _slicedToArray(_ref4, 2),\n            a = _ref6[1];\n\n        var _ref7 = _slicedToArray(_ref5, 2),\n            b = _ref7[1];\n\n        return a - b;\n      });\n      var best = sorted.pop();\n      return {\n        id: \"\".concat(projectId, \"-\").concat(best[0]),\n        emp1: best[0].split('-')[0],\n        emp2: best[0].split('-')[1],\n        project: projectId,\n        days: parseInt(best[1] / 2)\n      };\n    });\n    return final;\n  };\n\n  var extractTeamworkData = function extractTeamworkData(importedData) {\n    if (importedData.length === 0 || importedData[0].length !== 4) {\n      setError('System cannot recognize the imported data!');\n      return;\n    }\n\n    dispatch(setTeamworks(teamDays(importedData)));\n  };\n\n  var handleChange = function handleChange(e) {\n    Papa.parse(e.target.files[0], {\n      error: function error(err, file, inputElem, reason) {\n        console.log(err, reason);\n        setError(err);\n      },\n      complete: function complete(results, file) {\n        if (results.errors.length > 0) {\n          setError(results.errors[0].message);\n        } else {\n          setError(null);\n          extractTeamworkData(results.data);\n        }\n\n        console.log(\"Parsing complete:\", results, file);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"Upload File\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), error && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    style: {\n      marginTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, error));\n}","map":{"version":3,"sources":["/home/georgi/projects/georgi-ermenkov-employees/src/components/Uploader.js"],"names":["React","useState","Button","Alert","Papa","getOverlappingDaysInIntervals","setTeamworks","useDispatch","Uploader","children","dispatch","error","setError","teamDays","data","results","daysTogether","startEmp1","endEmp1","startEmp2","endEmp2","se1","Date","se2","ee1","now","ee2","start","end","map","tw","twNext","days","final","Object","entries","projectId","daysHash","sorted","sort","a","b","best","pop","id","emp1","split","emp2","project","parseInt","extractTeamworkData","importedData","length","handleChange","e","parse","target","files","err","file","inputElem","reason","console","log","complete","errors","message","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from '@material-ui/lab/Alert';\nimport * as Papa from 'papaparse';\nimport { getOverlappingDaysInIntervals } from 'date-fns'\nimport { setTeamworks } from \"../containers/Home/teamworkReducer\";\nimport { useDispatch } from \"react-redux\";\n\nexport function Uploader({ children }) {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(null);\n\n  const teamDays = (data) => {\n    let results = {};\n\n    const daysTogether = (startEmp1, endEmp1, startEmp2, endEmp2) => {\n      let se1 = new Date(startEmp1);\n      let se2 = new Date(startEmp2);\n      let ee1 = (endEmp1) ? new Date(endEmp1) : Date.now();\n      let ee2 = (endEmp2) ? new Date(endEmp2) : Date.now();\n\n      return getOverlappingDaysInIntervals(\n        { start: se1, end: ee1 },\n        { start: se2, end: ee2 }\n      );\n    }\n\n    data.map(tw => {\n      data.map(twNext => {\n        if (tw[1] === twNext[1] && tw[0] !== twNext[0]) {\n          if (!results[tw[1]]) results[tw[1]] = {}\n\n          const days = daysTogether(tw[2], tw[3], twNext[2], twNext[3]);\n\n          if (!results[tw[1]][`${tw[0]}-${twNext[0]}`])\n            results[tw[1]][`${tw[0]}-${twNext[0]}`] = 0\n          if (!results[tw[1]][`${twNext[0]}-${tw[0]}`])\n            results[tw[1]][`${twNext[0]}-${tw[0]}`] = 0\n\n          results[tw[1]][`${tw[0]}-${twNext[0]}`] += days + 1;\n          results[tw[1]][`${twNext[0]}-${tw[0]}`] += days + 1;\n        }\n      })\n    })\n\n    const final = Object.entries(results).map(([projectId, daysHash]) => {\n      const sorted = Object.entries(daysHash).sort(([, a], [, b]) => a - b);\n      const best = sorted.pop();\n\n      return {\n        id: `${projectId}-${best[0]}`,\n        emp1: best[0].split('-')[0],\n        emp2: best[0].split('-')[1],\n        project: projectId,\n        days: parseInt(best[1] / 2)\n      }\n    })\n\n    return final;\n  }\n\n  const extractTeamworkData = (importedData) => {\n    if (importedData.length === 0 || importedData[0].length !== 4) {\n      setError('System cannot recognize the imported data!');\n      return;\n    }\n\n    dispatch(setTeamworks(teamDays(importedData)));\n  };\n\n  const handleChange = e => {\n    Papa.parse(e.target.files[0], {\n      error: (err, file, inputElem, reason) => {\n        console.log(err, reason);\n        setError(err);\n      },\n      complete: (results, file) => {\n        if (results.errors.length > 0) {\n          setError(results.errors[0].message)\n        } else {\n          setError(null);\n          extractTeamworkData(results.data);\n        }\n        console.log(\"Parsing complete:\", results, file);\n      }\n    });\n  };\n  return (\n    <div style={{ width: 300 }}>\n      <Button\n        variant=\"contained\"\n        component=\"label\"\n        fullWidth\n      >\n        Upload File\n        <input type=\"file\" onChange={handleChange} hidden />\n      </Button>\n      {error &&\n        <Alert severity=\"error\" style={{ marginTop: 4 }}>{error}</Alert>\n      }\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}